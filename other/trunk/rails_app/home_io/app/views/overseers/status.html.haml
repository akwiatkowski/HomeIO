%h2= "Overseers current status"

%table.data_table
  %thead
    %tr
      %th= "Id"
      %th= "Overseer name"
      %th= "Measurement type"
      %th= "Condition"
      %th= "Current value"
      %th= "Condition state"
      %th= "Additional condition state"
      %th= "Change state"

  - @overseer_statuses.each do |overseer_status|
    - mt = MeasType.find_by_name( overseer_status[:measurement_name].strip )
    - if not mt.nil?
      - unit = mt.unit
    - else
      - unit = nil

    - # addition information used in tooltip
    - tooltip = ""
    - tooltip += "Check every of #{overseer_status[:interval]} seconds<br \>"
    - if overseer_status[:average_count] > 1
      - tooltip += "Average for #{overseer_status[:average_count]} measurements<br \>"
    - if not overseer_status[:stats].nil? and not overseer_status[:stats][:last_hit].nil?
      - tooltip += "Last hit at #{overseer_status[:stats][:last_hit]}<br \>"
    - if not overseer_status[:stats].nil? and not overseer_status[:stats][:hit_count].nil?
      - tooltip += "Hit count - #{overseer_status[:stats][:hit_count]} times<br \>"
    - if not overseer_status[:stats].nil? and not overseer_status[:stats][:start_time].nil?
      - tooltip += "Started at #{overseer_status[:stats][:start_time]}<br \>"



    %tr{:class => cycle("even", "odd"), :title => tooltip}
      %td= overseer_status[:overseer_id]
      %td= overseer_status[:name]
      %td= overseer_status[:measurement_name]
      %td
        - if overseer_status[:greater] == true
          = ">="
        - else
          = "<="
        - if not overseer_status[:stats].nil? and not overseer_status[:stats][:current_threshold_value].nil?
          = np( overseer_status[:stats][:current_threshold_value] )
        - else
          = np( overseer_status[:threshold_value] )
        = unit

      %td
        - if not overseer_status[:stats][:last_checked_value].nil?
          = np( overseer_status[:stats][:last_checked_value] )
          = unit

      %td
        - if not overseer_status[:stats].nil? and not overseer_status[:stats][:state].nil?
          = overseer_status[:stats][:state].to_s.humanize

      %td
        - if not overseer_status[:stats].nil? and not overseer_status[:stats][:proc_result].nil?
          = overseer_status[:stats][:proc_result].to_s.humanize

      %td
        - if overseer_status[:active]
          = button_to "Disable", disable_overseer_path(overseer_status[:overseer_id]), :method => :put
        - else
          = button_to "Enable", enable_overseer_path(overseer_status[:overseer_id]), :method => :put


%hr
%p= will_paginate @overseer_statuses
%p= page_entries_info @overseer_statuses, :entry_name => 'Overseer status'

