== HomeIO

= Installation

1. Use RVM. It helps.
2. Go into '/trunk/rails_app/home_io' and allow RVM to execute .rmvrc or execute it content yourself.
   Preferred Ruby version is 1.8.7, patchlevel >330. Tested on 334 but should work well with later versions of Ruby.
3. Execute 'rake db:migrate'.
4. Go into '/trunk/ruby_server'.



TODO: Remove this garbage

= HomeIO backend

This file explain simple usage and directory structure of backend server.

== Simple usage

1. Use git clone to get latest version.
2. Create ./lib/config_local. Configuration templates are stored there and used when local configuration is not available.
3. Create DB with full rights.
4. Copy ./lib/config/StorageActiveRecord.yml to ./lib/config_local/StorageActiveRecord.yml and modify to use DB createf before.
5. Run rake db:init to create tables used for backend.
6. Start rake supervisor:backend.

== RVM, Debian and Openssl issue

Comment 3 lines in /usr/local/rvm/src/ruby-1.8.7-p334/ext/openssl/ossl_ssl.c

// OSSL_SSL_METHOD_ENTRY(SSLv2),
// OSSL_SSL_METHOD_ENTRY(SSLv2_server),
// OSSL_SSL_METHOD_ENTRY(SSLv2_client),

Ugly as hell, but let compile ruby. Compile without using openssl rvm package.

== Useful sqls

1. select * from meas_archives where time_to > localtimestamp - interval '1 minute' order by time_to;
   Measurements during last minute.


== Structure



* +config+

  Configuration files used for all project classed. When it was sensible
  I moved to configuration yaml file. Name of file is exact, or should be, as class
  name.

  - <tt>config/input</tt>

    Place to store input data, no configuration. This data is ofter processed
    one time, or used for populating DB tables.

    - <tt>config/input/other/EPPO.csv</tt>

      Old weather data logged using KDE weather plugin. You can use <tt>lib/other/custom_old_import.rb</tt>
      to import that kind of data as metars.

--
  TODO: Consider convert to 1 level tree structure for tasks, like 'weather_ripper.
++

* +config_local+
  Local, not versioned configuration files. All passwords I'm storing here.
  Structure is exactly like +config+.





2. How to use.
* install Ruby and gems
* check config files (./config/*) and try get to know the project, most important files at start are:
- Geolocation.yml - set your geographic coords here
- MetarLogger.yml - choose cities which you are interested in if default set is not good enough
- StorageActiveRecord.yml - choose sqlite, mysql or other Active Record capable database, and set configuration here.
  Just like in Rails.
- WeatherInteriaPl.yml, WeatherOnetPl.yml, WeatherWpPl.yml - you can set places to log weather using some popular Polish portals
* create database, not schema
* run 'rake db:init' - it should create and populate tables
* run app:
- 'rake supervisor:start' - it will start server which listen to commands
- 'rake action:fetch_metar' - fetch metars set in  MetarLogger.yml
- 'rake action:fetch_weather' - fetch weather data using WeatherRipper using (at this moment) some popular polish portals
- 'rake client:fetch_metar' - send command to server started by 'rake supervisor:start', and make it do 'rake action:fetch_metar'
- 'rake client:fetch_weather' - send command to server started by 'rake supervisor:start', and make it do 'rake action:fetch_weather'

Other command are available after running 'rake -T'. If you have problems you can mail me login 'bobikx' and the server is poczta.fm.
++
